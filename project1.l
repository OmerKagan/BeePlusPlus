/* project1.l */
%option main
alphabetic [A-Za-z]
digit [0-9]
alphanumeric ({alphabetic}|{digit})
url ({alphanumeric}|\.)
boolean (True|False)
type (int|double|char|bool|string|url)
%%
bout printf("B_OUT");
bin printf("B_IN");
if printf("IF");
elif printf("ELSE_IF");
else printf("ELSE");
return printf("RETURN"); 
http\:\/\/{url}+ printf("URL");
for printf("FOR");
while printf("WHILE");
connect printf("CONNECT");
send printf("SEND");
to printf("TO");
receive printf("RECEIVE");
from printf("FROM");
and printf("AND");
or printf("OR");
void printf("VOID");
{type} printf("TYPE_ID");
\"(.)*\" printf("STRING");
{boolean} printf("BOOLEAN");
{alphabetic}{alphanumeric}* printf("IDENTIFIER");
\'(.)\' printf("CHAR");
(-)?{digit}+ printf("INT");
(\-)?{digit}*(\.)?{digit}+ printf("DOUBLE");
\( printf("LP");
\) printf("RP");
\, printf("COMMA");
\. printf("DOT");
\{ printf("L_CB");
\} printf("R_CB");
\<\- printf("BOUT_OP");
\-\> printf("BIN_OP");
\= printf("ASSIGN_OP");
\=\= printf("EQ_OP");
\!\= printf("NOT_EQ_OP");
\< printf("SMALLER_THAN");
\> printf("GREATER_THAN");
\<\= printf("SMALLER_OR_EQUAL");
\>\= printf("GREATER_OR_EQUAL");
\! printf("NOT_OP");
\' printf("SINGLE_QUOTE");
\" printf("DOUBLE_QUOTE");
\% printf("MODULO_OP");
\/\/ printf("COMMENT_OP");
\/\- printf("MULTILINE_COMMENT_START");
\-\/ printf("MULTILINE_COMMENT_END");
\/ printf("DIVISION_OP");
\* printf("MULTIPLICATION_OP");
\- printf("SUBSTRACTION_OP");
\+ printf("PLUS_OP");
\n printf(" NEW_LINE ");
\t printf(" TAB ");
\; printf("SEMI_COLON");
